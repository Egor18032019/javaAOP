version: '3.9'

services:
  postgres:
    image: postgres:11.13
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=0000
  zookeeper_t1:
    image: confluentinc/cp-zookeeper:5.5.0
    hostname: zookeeper_t1
    container_name: zookeeper_t1
    ports:
      - "2182:2182"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2182
      ZOOKEEPER_TICK_TIME: 2000
  broker_1_t1:
    image: confluentinc/cp-kafka:5.5.0
    hostname: broker_1_t1
    container_name: broker_1_t1
    depends_on:
      - zookeeper_t1
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper_t1:2182'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker_1_t1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    healthcheck:
      test: [ "CMD", "nc", "-vz", "localhost", "9092" ]
      interval: 10s
      timeout: 3s
      retries: 3
  broker_2_t1:
    image: confluentinc/cp-kafka:5.5.0
    hostname: broker_2_t1
    container_name: broker_2_t1
    depends_on:
      - zookeeper_t1
    ports:
      - "29093:29092"
      - "9093:9092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper_t1:2182'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker_2_t1:29093,PLAINTEXT_HOST://localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    healthcheck:
      test: [ "CMD", "nc", "-vz", "localhost", "9093" ]
      interval: 10s
      timeout: 3s
      retries: 3
  kafka-ui1:
    container_name: kafka-ui1
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8091:8080"
    #      внешний:внутренний
    depends_on:
      broker_1_t1:
        condition: service_healthy
    environment:
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker_1_t1:29092
      DYNAMIC_CONFIG_ENABLED: 'true'
  kafka-ui2:
    container_name: kafka-ui2
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8092:8080"
    #      внешний:внутренний
    depends_on:
      broker_2_t1:
        condition: service_healthy
    environment:
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker_2_t1:29093
      DYNAMIC_CONFIG_ENABLED: 'true'